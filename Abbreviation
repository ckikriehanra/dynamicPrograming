string abbreviation(string a, string b) 
{
    //the idea from LCS
    int row, column;
    row = b.length()+1;
    column = a.length()+1;
    vector<vector<bool>> isValid(row, vector<bool>(column));
    isValid[0][0] = true;
    for(int j = 1; j < column; j++)
    {
        if(a[j-1] >= 'a' && a[j-1] <= 'z')
        {
            isValid[0][j] = isValid[0][j-1];
        }
        else  
        {
            isValid[0][j] = false;
        }
    }
    for(int i = 1; i < row; i++)
    {
        isValid[i][0] = false;
    }
    
    for(int i = 1; i < row; i++)
    {
        for(int j = 1; j < column; j++)
        {
            if(b[i-1] == a[j-1])
            {
                isValid[i][j] = isValid[i-1][j-1];
            }
            else if(a[j-1]-32 == b[i-1])
            {
                isValid[i][j] = isValid[i-1][j-1] || isValid[i][j-1];
            }
            else  if(a[j-1] >= 'A' && a[j-1] <= 'Z')
            {
                isValid[i][j] = false;
            }
            else  
            {
                isValid[i][j] = isValid[i][j-1];
            }
        }
    }
    return (isValid[row-1][column-1]) ? "YES" : "NO";
}
